openapi: 3.0.3
info:
  title: Backend TASKS - OpenAPI 3.0
  termsOfService: http://swagger.io/terms/
  contact:
    email: apiteam@swagger.io
  version: 0.1.0
servers:
  - url: https://localhost/tasks
tags:
  - name: task
    description: Everything about your task
paths:  
  /:
    get:
      tags:
        - task
      summary: Gets a task list
      description: Gets a task list
      operationId: findAllTasks
      parameters:
        - name: authorization
          in: header
          description: Token of user
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: Page number
          required: false
          schema:
            type: integer
            format: int64
        - name: limit
          in: query
          description: Number of registers per page
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Tasks found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '204':
          description: No tasks found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Null'
        '500':
          description: Internal server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Null'
    post:
      tags:
        - task
      summary: Add a new task
      description: Create a new TASK register
      operationId: createTask
      parameters:
        - name: authorization
          in: header
          description: Token of user
          required: true
          schema:
            type: string
      requestBody:
        description: Create a new task register
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskWithoutId'
        required: true
      responses:
        '201':
          description: Task created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '400': 
          description: 
            - Invalid input data
            - Missing required data
            - Due date must be greater than current date
            - Error creating task
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Null' 
        '422':
          description: Invalid dueDate format. Use DD-MM-YYYY
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Null'
        '500':
          description: Internal server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Null'
  /{id}:
    get:
      tags:
          - task
      summary: Find task by ID
      description: Returns a single task
      operationId: findByIDTask
      parameters:
        - name: authorization
          in: header
          description: Token of user
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: ID of task to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Task found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '404':
          description: Task not found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Null' 
        '500':
          description: Internal server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Null'
    put:
      tags:
        - task
      summary: Update an existing task
      description: Update an existing task by Id
      operationId: updateTask
      parameters:
        - name: authorization
          in: header
          description: Token of user
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: ID of task to return
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: A task object to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskWithoutId'
        required: true
      responses:
        '200':
          description: Task updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '400':
          description: 
            - Invalid task ID
            - Invalid input data
            - Missing required data
            - Due date must be greater than current date
            - Error updating task
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Null'
        '404':
          description: Task not found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Null'
        '422':
          description: Invalid dueDate format. Use DD-MM-YYYY
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Null'
        '500':
          description: Internal server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Null'
    delete:
      tags:
        - task
      summary: Delete a task by ID
      description: Delete a task register by ID 
      operationId: deleteTask
      parameters:
        - name: authorization
          in: header
          description: Token of user
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: ID of task to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Task deleted successfully
          content:
            text/plain:
              example: 'true'
        '400': 
          description: Invalid task ID
          content:
            text/plain:
              example: 'true'
        '404':
          description: Task not found
          content:
            text/plain:
              example: 'true'
        '500':
          description: Internal server error
          content:
            text/plain:
              example: 'true'
  /status:
    get:
      tags:
        - task
      summary: Gets a task list by status
      description: Gets a task list by status
      operationId: findAllTasksByStatus
      parameters:
        - name: authorization
          in: header
          description: Token of user
          required: true
          schema:
            type: string
        - name: status
          in: query
          description: Status of task to return
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: Page number
          required: false
          schema:
            type: integer
            format: int64
        - name: limit
          in: query
          description: Number of registers per page
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Tasks found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '204':
          description: No tasks found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Null'
        '500':
          description: Internal server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Null'
  /date:
    get:
      tags:
        - task
      summary: Gets a task list by date
      description: Gets a task list by date
      operationId: findAllTasksByDate
      parameters:
        - name: authorization
          in: header
          description: Token of user
          required: true
          schema:
            type: string
        - name: date
          in: query
          description: Date of task to return in format DD-MM-YYYY
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: Page number
          required: false
          schema:
            type: integer
            format: int64
        - name: limit
          in: query
          description: Number of registers per page
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Tasks found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '204':
          description: No tasks found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Null'
        '422':
          description: Invalid date format. Use DD-MM-YYYY
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Null'
        '500':
          description: Internal server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Null'
  /user/:userID:
    get:
      tags:
        - task
      summary: Gets a task list by user
      description: Gets a task list by user
      operationId: findAllTasksByUser
      parameters:
        - name: authorization
          in: header
          description: Token of user
          required: true
          schema:
            type: string
        - name: userID
          in: path
          description: User of task to return
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: Page number
          required: false
          schema:
            type: integer
            format: int64
        - name: limit
          in: query
          description: Number of registers per page
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Tasks found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '204':
          description: No tasks found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Null'
        '500':
          description: Internal server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Null'
  /responsible:
    get:
      tags:
        - task
      summary: Gets a task list by responsible
      description: Gets a task list by responsible
      operationId: findAllTasksByResponsible
      parameters:
        - name: authorization
          in: header
          description: Token of user
          required: true
          schema:
            type: string
        - name: responsible
          in: query
          description: Responsible of task to return
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: Page number
          required: false
          schema:
            type: integer
            format: int64
        - name: limit
          in: query
          description: Number of registers per page
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Tasks found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '204':
          description: No tasks found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Null'
        '500':
          description: Internal server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Null'
  /tag:
    get:
      tags:
        - task
      summary: Gets a task list by tag
      description: Gets a task list by tag
      operationId: findAllTasksByTag
      parameters:
        - name: authorization
          in: header
          description: Token of user
          required: true
          schema:
            type: string
        - name: tag
          in: query
          description: Tag of task to return
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: Page number
          required: false
          schema:
            type: integer
            format: int64
        - name: limit
          in: query
          description: Number of registers per page
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Tasks found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '204':
          description: No tasks found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Null'
        '500':
          description: Internal server error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Null'

components:
  schemas:
    TaskWithoutId:
      allOf:
        - $ref: '#/components/schemas/Task'
        - type: object
          properties:
            id:
              readOnly: true
    Task:
      required:
        - title
        - description
        - completionStatus
        - dueDate
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        title:
          type: string
          example: 'Buy milk'
        description:
          type: string
          example: 'Buy milk for the breakfast'
        completionStatus:
          type: string
          example: 'In progress'
        dueDate:
          type: string
          example: '01/01/2019'
        comments:
          type: string
          example: 'This is a comment'
        tags:
          type: string
          example: 'This is a tag'
      xml:
        name: pet
    Null:
      type: string
      example: "null"     
    PartialTask:
      type: object
      properties:
        title:
          type: string
          example: 'Buy milk'
        description:
          type: string
          example: 'Buy milk for the breakfast'
        completionStatus:
          type: string
          example: 'In progress'
        dueDate:
          type: string
          example: '01/01/2019'
        